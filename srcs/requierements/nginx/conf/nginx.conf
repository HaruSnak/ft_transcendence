# ==================== Configuration des événements ====================
# Bloc obligatoire pour définir les paramètres de connexion
# Utilise les valeurs par défaut (worker_connections 1024)
events {}

# ==================== Configuration HTTP principale ====================
http {
    # Inclusion des types MIME pour servir les fichiers avec le bon Content-Type
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ==================== Serveur HTTPS principal ====================
    server {
        # Écoute sur le port 443 avec SSL/TLS
        listen 443 ssl;
        http2 on;
        server_name ft_transcendence;

        # ==================== Configuration SSL/TLS ====================
        # Certificat auto-signé pour le développement local
        ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
        # Protocoles TLS modernes uniquement (sécurité renforcée)
        ssl_protocols TLSv1.2 TLSv1.3;
        # Suites de chiffrement sécurisées, exclut les algorithmes faibles
        ssl_ciphers HIGH:!aNULL:!MD5;

        # ==================== Headers de sécurité ====================
        # Prévient le clickjacking
        add_header X-Frame-Options "SAMEORIGIN" always;
        # Prévient le MIME type sniffing
        add_header X-Content-Type-Options "nosniff" always;
        # Active la protection XSS du navigateur
        add_header X-XSS-Protection "1; mode=block" always;
        # Cache le numéro de version nginx
        server_tokens off;

        # ==================== Route Socket.IO (WebSocket racine) ====================
        # Socket.IO utilise /socket.io/ par défaut
        location /socket.io/ {
            proxy_pass http://chat-service:3001/socket.io/;
            # HTTP/1.1 requis pour WebSocket
            proxy_http_version 1.1;
            # Headers nécessaires pour l'upgrade WebSocket
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            # Headers de proxy standard
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ==================== Route API Chat (WebSocket) ====================
        # Proxy vers le service de chat avec support WebSocket
        location /api/chat/ {
            proxy_pass http://chat-service:3001/api/chat/;
            # HTTP/1.1 requis pour WebSocket
            proxy_http_version 1.1;
            # Headers nécessaires pour l'upgrade WebSocket
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            # Headers de proxy standard pour préserver les informations client
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ==================== Route API Game ====================
        # Proxy vers le service de jeu
        location /api/game/ {
            proxy_pass http://game-service:3002/api/game/;
            # Headers de proxy pour préserver l'IP et le protocole d'origine
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ==================== Route API User ====================
        # Proxy vers le service utilisateur
        location /api/user/ {
            proxy_pass http://user-service:3003/api/user/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ==================== Route API Auth ====================
        # Route register and login to user-service (has the database)
        location ~ ^/api/auth/(register|login)$ {
            proxy_pass http://user-service:3003$request_uri;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Other auth routes go to auth-service
        location /api/auth/ {
            proxy_pass http://auth-service:3004/api/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ==================== Route frontend (SPA) ====================
        # Sert les fichiers statiques du frontend depuis public/
        location / {
            root /usr/share/nginx/html/public;
            index index.html;
            try_files $uri $uri/ /index.html;
            
            # Disable cache for JS/CSS during development
            location ~* \.(js|css)$ {
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
                add_header Expires "0";
            }
        }
    }
}